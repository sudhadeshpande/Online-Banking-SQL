

ALTER procedure p_insert_transaction

(@DEBIT_ACCOUNT_NO BIGINT
,@CREDIT_ACCOUNT_NO BIGINT
,@AMOUNT INT)
AS
BEGIN
/*INSERT DATA INTO TRANSACTION TABLES THAT IS CREDIT AND DEBIT TRANSACTION DETAILS*/

	DECLARE @DATE_TIME DATETIME;
	SET @DATE_TIME=GETDATE(); /*VARIABLE STORES CURRENT DATETIME*/

	DECLARE @BALANCE_AMOUNT BIGINT;
	SET @BALANCE_AMOUNT=(SELECT  balance from ACCOUNT  WHERE account_no=@DEBIT_ACCOUNT_NO );

	

	IF @BALANCE_AMOUNT>@AMOUNT and @DEBIT_ACCOUNT_NO!=@CREDIT_ACCOUNT_NO 
	BEGIN
	/*INSERT INTO DEBIT_TRANSACTION_DETAILS*/
	INSERT INTO DEBIT_TRANSACTION_DETAILS(debit_account_no,debit_amount,debit_date_time) 
	VALUES(@DEBIT_ACCOUNT_NO,@AMOUNT,@DATE_TIME)

	/*ID VARIABLE GETS THE id from DEBIT_TRANSACTION_DETAILS
	HERE WE ARE ARRANGING THE ROWS IN DESC ORDER w.r.t id and SELECTING TOP 1st id that is it gets the id of recently added row*/
	DECLARE @ID INT;
	SET @ID= (SELECT TOP 1 id FROM DEBIT_TRANSACTION_DETAILS ORDER BY id DESC );

	
	
	

		/*INSERT INTO CREDIT_TRANSACTION_DETAILS*/
	INSERT INTO CREDIT_TRANSACTION_DETAILS(id_debit,credit_account_no,credit_amount,credit_date_time) 
	VALUES(@ID,@CREDIT_ACCOUNT_NO,@AMOUNT,@DATE_TIME)


	/* update the balance amount in ACCOUNT table based on the transactions*/
		/*In debit account update balance amount by balance-amount
	and in credit amount update balance amount by balance+amount*/
	

		DECLARE @VAR_AMOUNT INT;
	SET @VAR_AMOUNT = (SELECT TOP 1 debit_amount from DEBIT_TRANSACTION_DETAILS ORDER BY id DESC   );

	

	DECLARE @VAR_DEBITS_ACCOUNT_NO BIGINT;
	SET @VAR_DEBITS_ACCOUNT_NO = (SELECT TOP 1 debit_account_no from DEBIT_TRANSACTION_DETAILS ORDER BY id DESC);

	DECLARE @VAR_CREDITS_ACCOUNT_NO BIGINT;
	SET @VAR_CREDITS_ACCOUNT_NO=(SELECT TOP 1 credit_account_no from	CREDIT_TRANSACTION_DETAILS ORDER BY id_debit DESC);

	DECLARE @VAR_BALANCE_CREDIT BIGINT;
	SET @VAR_BALANCE_CREDIT = (SELECT   balance from ACCOUNT   WHERE account_no= @VAR_CREDITS_ACCOUNT_NO);

	DECLARE @VAR_BALANCE_DEBIT BIGINT;
	SET @VAR_BALANCE_DEBIT = (SELECT   balance from ACCOUNT WHERE account_no= @VAR_DEBITS_ACCOUNT_NO);

	DECLARE @TRANSACTION_ID INT ;
	SET @TRANSACTION_ID=(SELECT TOP 1 id FROM DEBIT_TRANSACTION_DETAILS ORDER BY id DESC);

	
	
	IF @VAR_AMOUNT>0
	BEGIN
		UPDATE ACCOUNT SET ACCOUNT.balance = @VAR_BALANCE_DEBIT- @VAR_AMOUNT WHERE account_no = @VAR_DEBITS_ACCOUNT_NO;

		UPDATE ACCOUNT SET ACCOUNT.balance = @VAR_BALANCE_CREDIT + @VAR_AMOUNT WHERE account_no = @VAR_CREDITS_ACCOUNT_NO;

		UPDATE CREDIT_TRANSACTION_DETAILS SET credit_account_balance=@VAR_BALANCE_CREDIT + @VAR_AMOUNT
		WHERE id_debit =@TRANSACTION_ID;

			UPDATE DEBIT_TRANSACTION_DETAILS SET debit_account_balance=@VAR_BALANCE_DEBIT - @VAR_AMOUNT
		WHERE id = @TRANSACTION_ID;

		
	END
	END
	ELSE
		BEGIN
			RAISERROR ( 'TRANSACTION FAILED AS ENTERED AMOUNT IS GREATER THAN THE AVAILABLE BALANCE',1,1);

		END
	
END

select * from DEBIT_TRANSACTION_DETAILS
SELECT * FROM CREDIT_TRANSACTION_DETAILS
SELECT * FROM ACCOUNT
select * from CUSTOMER
select * from ACCOUNT_TYPE
select * from BRANCH

DELETE FROM DEBIT_TRANSACTION_DETAILS
DELETE FROM CREDIT_TRANSACTION_DETAILS

EXEC p_insert_transaction 110010001112,110010001112,996700

EXEC p_insert_transaction 110010001112,110010001113,1200



